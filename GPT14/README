题目：
写一个简单的 HTTP 服务器，支持以下功能：
当访问根目录时，返回一个简单的欢迎页面，页面中包含一个“Hello, World!”的文本。
当访问 /time 路径时，返回服务器当前的时间，格式为“2006-01-02 15:04:05”。
当访问 /async 路径时，返回一个包含当前时间的 JSON 数据，但是响应需要在一个新的协程中生成，主协程不能阻塞。
提示：
Go 语言中的 HTTP 相关的代码可以使用 net/http 包来实现。
在实现服务器的时候，可以使用 http.NewServeMux() 来创建一个路由器，然后使用 HandleFunc() 方法来注册处理函数。
在处理函数中，可以使用 w.Write() 方法来写入响应内容，使用 time.Now() 方法来获取当前时间。
在注册处理函数的时候，需要注意顺序，先注册的处理函数会优先匹配。因此，需要先注册 /time 路径的处理函数。
在处理 /async 路径的请求时，需要开启一个新的协程来生成响应数据，主协程不能阻塞。
希望这道题目能够帮助你更好地理解 Go 语言中的 HTTP 相关知识点，并提高对协程的理解和运用能力。